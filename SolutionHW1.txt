
Reza semyari
HomeWork 1

------------------------------
------------------------------

۱)
با “use strict”  کدها به شکل سخت‌گیرانه اجرا میشوند و کدهای ما را استاندارد میکند ،یعنی بطور مثال ما از متغیر‌های که declare نشده باشند نمیتوانیم استفاده کنیم و به ما خطا می‌دهد یا در اسامی متغیر‌ها، خطای تایپی داشته باشیم آن متغیر را به متغیر global  تبدیل میکند، در اینجا use strict کد ما را امن میکند و بروز این اتفاق جلوگیری میکند. 

"use strict"
let userName = "ali";  
userNeme = "reza" ;      // Error
				
 “use strict” ها بصورت یک string میتوان در سندها استفاده کرد. آنها را هم میتوان به شکل global (بالای script ) که بر تمامی کد‌ها اعمال میشود، و یا درون ‌block code  یک function که تنها کدهای درون تابع را شامل میشود، استفاده کرد. برخی از ویژگی‌‌های زبانی مثل class ها و modules ها بطور خودکار strict mode  را فعال میکنند.

---------------------------------------------------------

۲)
تعریف متغیر ها برای readability بیشتر بصورت multiline انجام میشود

"use strict"
// multiline declaration for better readability
let userName;
let age ;
let active ;

userName = "maktab27" ;  // assign the value 
let userAge = prompt(" please enter your age : " , 18) ; // 18 is default value in text box
if( userAge > 18 ){  // condition
    active = true ;
}else{
    active = false ;
}



-----------------------------------------------------


۳)
حلقه for  بیرونی بازه اعدادی است بررسی میشوند که primary number هستند یا خیر. حلقه for داخلی مربوط به بررسی تعداد مقسوم‌علیه‌های یک عدد است که کافی است تا نیمی از آن عدد بررسی کنیم ( اعداد بالاتر از نصف آن عدد نمیتوانند مقسوم‌علیه آن عدد باشند). بوسیله تعریف یک متغیر شمارنده میتوان تعداد مقسوم‌علیه‌های اعداد را بدست آورد. با قرار دادن یک شرط، آنهایی که تنها 2  مقسوم‌علیه دارند(ویژگی primary numbers) را میتوان گزارش داد.(چون حلقه بیرونی با 2 شروع شده و حلقه داخلی برای i = 2  تنها یک مرحله عملیات انجام میدهد بنابراین متغیر شمارنده را با مقدار ۱ assign کنیم )

"use strict"
for(let i = 2; i < 100; i++){
    let counter = 1 ;  //counter of divisor
    for(let j = 1; j <= i/2; j++){
        if( i % j === 0){
            counter++ ;
        }
    }
    if(counter === 2){  // condition of truth of primary number 
        console.log(`${i} is primery number`) ;
    }
}


---------------------------------------------------
 
۴)
عددی مربع کامل است که مجموع مقسوم‌علیه‌های آن زوج باشد، پس باید تعداد مقسوم‌علیه‌های آن را بدست بیاوریم. حلقه for  بیرونی  برای بررسی مربع کامل بودن بازه‌ای از  اعداد است و حلقه for  داخلی برای محاسبه تعداد مقسوم‌علیه‌ها میباشد.
condition  حلقه for  داخلی را √i   قرار دادیم زیرا تا حدود قابل توجهی تعداد مراحل عملیات را کاهش میدهد. چون اگر  j مقسوم‌علیه i باشد پس i/j  هم مقسوم‌علیه i است. j باید کوچکتر از √i باشد تا حاصلضرب دو مقسوم‌علیه برابر √i باشد پس کافی است تا مقدار √i  بررسی کنیم .

"use strict"
for(let i = 1; i <= 1000 ; i++){
    let counter = 0 ; //counter of divisor
    for(let j = 1; j <= (i ** 1/2); j++){
        if(i % j === 0){
            counter++ ;
        }
    }
    if(counter % 2 === 0){ //condition for truth of fullsquare
        console.log(`${i} is Full Squer`) ;
    }
}


به روش دیگری هم میتوان بصورت مستقیم فقط √i  را بررسی کرد. ابتدا با کمک تابع floor مقدار √i را بصورت عدد صحیح درآورد و بعد با ضرب در خود آن عدد، آن را با i برابری میدهیم

"use strict"
for(let i = 1; i <= 1000 ; i++){
    let numSquar = Math.floor( i ** (1/2) ) ;
    if( numSquar * numSquar  === i ){ // condition for truth of Full squar
        console.log(`${i} is Full Squar`) ;
    }      
}


---------------------------------------------

۵)
a) “110”
 بخاطر وجود عملگر “+” حاصل ( “”  +  1 ) یک رشته است و در واقع عمل concatenation  اتفاق میوفتد و داریم “1”   سپس مجددا عملگر “+”  داریم (”1” + 10) و حاصل “110”  میشود.
............................................
b) 1
ابتدا بواسطه عملگر “+”     concatenation صورت میگیرد ، داریم “1”  و در ادامه بخاطر عملگر “-“  ، “1” به number تبدیل میشود و حاصل عبارت   1 میشود.
.............................................
c) 2
اولویت با پرانتر است، حاصل داخل پرانتز مقدار true  برابر 1 و مقدار false  برابر 0 است  و حاصل عبارت  برابر 2  میشود.
................................................
d)9 
هر عملگری بجز “+”  باشد و یکطرف string  داشته باشیم ، string  به number تبدیل میشود. 
..................................................
e)”9px”
حاصل 4 + 5   چون هر دو number  هستند جمع ریاضی صورت میگیرد و حاصل 9   و در ادامه  9 + "px"  چون یک طرف string  داریم و عملگر “+” ، concatenation  داریم و حاصل “9px” است.
..................................................
f) NaN
حاصل   “$” +  4  ، بخاطر عملگر “+”  و اینکه یطرف string  داریم “$4”  میشود. اما حاصل عبارت “$4” – 5   از آنجاکه عملگر “-“  داریم باید جمع ریاضی انجام شود و چون جمع یک string  و  number  ، از نوع عدد نیست ،بنابراین حاصل عبارت NaN  میشود یعنی type آن عدد است ولی عدد نیست.
................................................
g)2 
“4”  بخاطر وجود عملگر “-“  به number  تبدیل میشود و حاصل عبارت 2  است.
.................................................
h) NaN
عملگر “-“ داریم و باید جمع ریاضی صورت گیرد اما چون “4rem”  نمیتواند به number  تبدیل شود بنابراین پاسخ NaN است.
................................................
i)6 
عملگر “*” داریم و دو operand  را به number  تبدیل میکند و پاسخ 6  است.
..............................................
j)0 
هر عدد تقسیم بر Infinity  ، 0 خواهد شد.
.................................................
k) true 
حاصل عبارتهای چپ و راست 0  است و چون data type  هر دو سمت strict equality  برابر است بنابراین true  برمیگرداند.
.................................................
l)”  -9  5” 
عملگر “+”  داریم و چون یک سمت string  داریم ، عمل concatenation  اتفاق رخ میدهد
................................................
m)-14 
عملگر “-“  داریم و باید عملیات ریاضی صورت گیرد و “   -9   “ ابتدا trim  میشود و فضاهای خالی ابتدا و انتهای آن از بین میرود و به number  تبدیل میشود و داریم -9 – 5 که حاصل -14  خواهد شد.
.................................................
n)1
مقدار تهی بعلاوه 1 
...................................................
o)NaN   
undefine  یعنی بدون مقدار ، assign نشده (مقداری ندارد) و جمع آن با یک number  نمیتواند number  باشد.
..................................................
p)NaN 
string  نداریم و حاصل نمیتواند یک number باشد ولی type آن number  است 
..................................................
q)NaN 
type آن number  ولی مقدار آن نمیتواند number  باشد 
